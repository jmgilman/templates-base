{
  inputs,
  cell,
}: let
  inherit (inputs) nixpkgs std;
  l = nixpkgs.lib // builtins;

  # A helper function to create an environment from a list of attributes
  mkEnv = env: l.mapAttrsToList (name: value: {inherit name value;}) env;
in
  l.mapAttrs (_: std.lib.dev.mkShell) rec {
    default = {...}: {
      name = nixpkgs.lib.mkForce "{{ project_name }}";
      nixago = [
        ((std.lib.dev.mkNixago std.lib.cfg.conform)
          cell.configs.conform)
        ((std.lib.dev.mkNixago std.lib.cfg.lefthook)
          cell.configs.lefthook)
        (std.lib.dev.mkNixago cell.configs.prettier)
        ((std.lib.dev.mkNixago std.lib.cfg.treefmt)
          cell.configs.treefmt)
      ];
      packages = with nixpkgs; [
        # Put your packages here
      ];
      ## Optionally set environment variables ##
      # env = mkEnv {
      #   MY_VAR = "my-value";
      # };
    };
  }
